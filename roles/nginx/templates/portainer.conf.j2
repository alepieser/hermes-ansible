# Portainer reverse proxy configuration with SSL
server {
    listen 80;
    server_name {{ proxy.subdomain }}.{{ letsencrypt_domain }};
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root {{ certbot_webroot_dir }};
        try_files $uri =404;
    }
    
    # Redirect HTTP to HTTPS (only if SSL certificate exists)
    location / {
        # Check if SSL certificate exists
        if (-f {{ certbot_config_dir }}/live/{{ letsencrypt_domain }}/fullchain.pem) {
            return 301 https://$server_name$request_uri;
        }
        # If no SSL certificate, proxy to backend (for initial setup)
        proxy_pass https://{{ proxy.host }}:{{ proxy.port }}/;
        proxy_set_header Host $http_host;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }
}

server {
    listen 443 ssl http2;
    server_name {{ proxy.subdomain }}.{{ letsencrypt_domain }};

    # SSL Certificate configuration
    ssl_certificate {{ certbot_config_dir }}/live/{{ letsencrypt_domain }}/fullchain.pem;
    ssl_certificate_key {{ certbot_config_dir }}/live/{{ letsencrypt_domain }}/privkey.pem;
    ssl_trusted_certificate {{ certbot_config_dir }}/live/{{ letsencrypt_domain }}/chain.pem;

    # SSL Security settings
    ssl_protocols {{ nginx_ssl_protocols }};
    ssl_ciphers {{ nginx_ssl_ciphers }};
    ssl_prefer_server_ciphers {{ nginx_ssl_prefer_server_ciphers }};
    ssl_session_cache {{ nginx_ssl_session_cache }};
    ssl_session_timeout {{ nginx_ssl_session_timeout }};
    ssl_stapling {{ nginx_ssl_stapling }};
    ssl_stapling_verify {{ nginx_ssl_stapling_verify }};

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Portainer proxy configuration
    location / {        
        proxy_pass https://{{ proxy.host }}:{{ proxy.port }}/;
        proxy_set_header Host $http_host;

        proxy_ssl_verify off;
        proxy_ssl_server_name on;

        {% if proxy.allowed_cidr is defined %}
        allow {{ proxy.allowed_cidr }};
        allow 127.0.0.1;
        deny all;
        {% endif %}
    }
}
